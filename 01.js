// –ó–º—ñ–Ω–∏ const —ñ let

// number - —Ü—ñ–¥—ñ —Ç–∞ –¥—Ä—ñ–±–Ω—ñ —á–∏—Å–ª–∞
const age = 10;
const totalPrice = 200.14;
// string
const message = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!';
// boolean
const isOpen = true;
// null
const ng = null;
// undefined
let a;
// —Å–∏–ª–æ—á–Ω—ñ —Ç–∏–ø–∏ –æ–±'–µ–∫—Ç
const array = [];
const ob = {};

// –æ–ø–µ—Ä–∞—Ç–æ—Ä typeof –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–º—ñ–Ω–æ—ó
console.log(typeof a);
console.log(2);

// –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —á–∏—Å–ª–∞–º–∏
// 1 –º–µ—Ç–æ–¥ –∫–æ–Ω—Å—É–∫—Ç–æ—Ä Number - –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É –∫ —á–∏—Å–ª—É –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–∏–≤–µ—Å—Ç–∏ –ø–æ–≤–µ—Ä—Ç–∞—î NaN;
const ab = '5';
console.log(Number(ab));
// 2 Number.parseInt() - –ø–∞—Ä—Å—ñ—Ç —Ü—ñ–ª–µ —á–∏—Å–ª–æ
const elementWidth = '59px';
const elementWidthParse = Number.parseInt(elementWidth);
console.log(elementWidthParse);
// 2 Number.parseFloat() - –ø–∞—Ä—Å—ñ—Ç –¥—Ä–æ–±–Ω–µ —á–∏—Å–ª–æ
const elementHeight = '200.12px';
const elementHeightParse = Number.parseFloat(elementHeight);
console.log(elementHeightParse);
// 3 toFixed()
const salary = 13.214343434;
const salaryNumber = Number(salary.toFixed(5));
console.log(salaryNumber);

// –ü—Ä–∏–∫–ª–æ–¥–∏ –∑ –æ–±—ë–µ–∫—Ç–æ–º Math

// –ü—Ä–∏–∫–ª–∞–¥
const colors = ['orange', 'tomato', 'blue', 'green', 'gray', 'black'];

const max = colors.length - 1;
const min = 0;
const index = Math.round(Math.random() * (max - min) + min);
const color = colors[index];

document.body.style.backgroundColor = color;

// 2 –ú–µ—Ç–æ–¥–∏ —Ä–æ–±–æ—Ç–∏ –∑ —Å—Ç—Ä–æ–∫–∞–º–∏
// –î–æ–≤–∂–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
const message2 = '–í —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ 26 —Å–∏–º–≤–æ–ª–æ–≤.';
console.log(message2.length);
// –î—ñ–∑–Ω–∞—Ç–∏—Å—è –æ—Å—Ç–∞–Ω—ñ–π —Å–∏–º–≤–æ–ª -1
console.log(message2.length - 1);

// –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü—ñ—è —Å—Ç—Ä–æ–∫
const firsName = 'Chelsy';
const lastName = 'Ema';
const fullName = firsName + ' ' + lastName;
console.log(fullName);

// –®–∞–±–ª–æ–Ω—ñ —Å—Ç—Ä–æ–∫—ñ
const quantity = 5;
const orderMsg = `–í–∏ –∑–∞–º–æ–≤–∏–ª–∏ ${quantity} —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫—ñ–≤`;
console.log(orderMsg);

// –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–æ–≥–æ –≤–≤–æ–¥—É
const brand = 'Samsung';
// const inDb = 'samsung';
const normalizedBrand = brand.toLowerCase();
console.log(normalizedBrand);

// –∫–æ–ø—ñ—è
const brandCopy = brand.slice(3);
console.log(brandCopy);

// –ü–æ—à—É–∫ –≤ —Å—Ç—Ä–æ–∫–µ –ø–æ–¥ —Å—Ç—Ä–æ–∫—É –∑ –º–µ—Ç–æ–¥–æ–º includes()
const word1 = 'c–ø–∞–º';
const string1 = '–Ø –ø—Ä–∏–Ω—Ü –ê–±—É–¥–∞–ª–∞, –∏ —ç—Ç–æ –Ω–µ C–ø–∞–º';

const normalizedString = string1.toLowerCase().includes(word1);
console.log(normalizedString);

// –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Boolean()
// 6 –ª–æ–∂–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å —è–∫—ñ –ø—Ä–∏–≤–æ–¥—è—Ç—å—Å—è –¥–æ false –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç—å—Å—è –¥–æ true
// 0, NaN, null, undefined, –ø–æ—Ä–æ–∂–Ω—è —Å—Ç—Ä–æ–∫–∞ "", false
console.log(Boolean(0));
console.log(Boolean(NaN));
console.log(Boolean(null));
console.log(Boolean(undefined));
console.log(Boolean(''));
console.log(Boolean(false));

console.log(Boolean('–ü—Ä–∏–≤—ñ—Ç'));

//
const sub = 'pro';

const canAccessContent = sub === 'pro' || sub === 'vip';
console.log(canAccessContent);

//
const balance = 1000;
let message3;

if (balance >= 0) {
  message3 = '–ü–æ–∑–∏—Ç–∏–≤–Ω–∏–π –±–∞–ª–∞–Ω—Å';
} else {
  message3 = '–ù–µ–≥–∞—Ç–∏–≤–Ω–∏–π –±–∞–ª–∞–Ω—Å';
}
console.log(message3);

// —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
const message4 = balance >= 1000 ? '–ü–æ–∑–∏—Ç–∏–≤–Ω–∏–π' : '–ù–µ–≥–∞—Ç–∏–≤–Ω–∏–π';
console.log(message4);

// lesson 2 ----------------------
const star = 5;
let price;
let message6;

switch (star) {
  case 1:
    price = '–¶—ñ–Ω–∞: 20.00$ –∑–∞ –æ–¥–Ω—É –¥–æ–±—É';
    message6 = `'–í–∏ –æ–±—Ä–∞–ª–∏ –≥–æ—Ç–µ–ª—å –∑ ${star} –∑—ñ—Ä–∫–æ—é'`;
    break;

  case 2:
    price = '–¶—ñ–Ω–∞: 30.00$ –∑–∞ –æ–¥–Ω—É –¥–æ–±—É';
    message6 = `–í–∏ –æ–±—Ä–∞–ª–∏ –≥–æ—Ç–µ–ª—å –∑ –∑—ñ—Ä–∫–æ—é ${star}`;
    break;

  case 3:
    price = '–¶—ñ–Ω–∞: 50.00$ –∑–∞ –æ–¥–Ω—É –¥–æ–±—É';
    message6 = `–í–∏ –æ–±—Ä–∞–ª–∏ –≥–æ—Ç–µ–ª—å –∑ –∑—ñ—Ä–∫–æ—é ${star}`;
    break;

  case 4:
    price = '–¶—ñ–Ω–∞: 70.00$ –∑–∞ –æ–¥–Ω—É –¥–æ–±—É';
    message6 = `–í–∏ –æ–±—Ä–∞–ª–∏ –≥–æ—Ç–µ–ª—å –∑ –∑—ñ—Ä–∫–æ—é ${star}`;
    break;

  case 5:
    price = '–¶—ñ–Ω–∞: 120.00$ –∑–∞ –æ–¥–Ω—É –¥–æ–±—É';
    message6 = `–í–∏ –æ–±—Ä–∞–ª–∏ –≥–æ—Ç–µ–ª—å –∑ –∑—ñ—Ä–∫–æ—é ${star}`;
    break;

  default:
    console.log(`–¢–∞–∫–æ—ó –≥–æ—Ç–µ–ª—é —É —è–∫–æ–≥–æ ${star} –∑—ñ—Ä–æ–∫ —É –Ω–∞—Å –Ω–µ –º–∞—î`);
}

console.log(message6);
console.log(price);

// –ó–∞–¥–∞—á–∞ 2
const minSalary = 500;
const maxSalary = 5000;
const employeers = 3;
let totalSalary = 0;

for (let i = 1; i <= employeers; i += 1) {
  const salary = Math.round(
    Math.random() * (maxSalary - minSalary) + minSalary
  );
  console.log(`–ó–ü —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ ${i} - ${salary}`);

  totalSalary += salary;
}
console.log(totalSalary);

// –ó–∞–¥–∞—á–∞ 3
const min1 = 0;
const max1 = 5;
let total1 = 0;

for (let i = min1; i <= max1; i += 1) {
  if (i % 2 !== 0) {
    continue;
  }
  console.log(i);
  total1 += i;
}
console.log('total', total1);

// –ó–∞–¥–∞—á–∞ 4
let balance1 = 2000;
const payement1 = 2000;

console.log(`–ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ${payement1} –∫—Ä–µ–¥–∏—Ç—ñ–≤`);

if (payement1 <= balance1) {
  balance1 -= payement1;

  console.log(`–ù–∞ —Å—á–µ—Ç—É –∑–∞–ª–∏—à–∏–ª–æ—Å—å ${balance1} –∫—Ä–µ–¥–∏—Ç—ñ–≤`);
} else {
  console.log(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π ${balance1} –¥–ª—è –ø–æ–∫—É–ø–∫–∏`);
}

// –ó–∞–¥–∞—á–∞ 4
let totalSpent = 2000;
let payement2 = 500;
let discount = 0;

if (totalSpent < 100) {
  console.log('–ù–µ –ø–∞—Ä—Ç–Ω–µ—Ä, –∑–Ω–∏–∂–∫–∞ 0%');
  discount = 0;
} else if (totalSpent >= 100 && totalSpent < 1000) {
  console.log('–ë—Ä–æ–Ω–∑–æ–≤–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä, –∑–Ω–∏–∂–∫–∞ 2%');
  discount = 0.02;
} else if (totalSalary >= 1000 && totalSpent < 5000) {
  console.log('–°—Ä—ñ–±–Ω–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä, –∑–Ω–∏–∂–∫–∞ 5%');
  discount = 0.05;
} else if (totalSalary >= 5000) {
  console.log('–ó–æ–ª–æ—Ç–æ–π –ø–∞—Ä—Ç–Ω–µ—Ä, –∑–Ω–∏–∂–∫–∞ 10%');
  discount = 0.1;
}

payement2 -= payement2 * discount;

console.log(
  `–û—Ñ–æ—Ä–º–ª—è—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—É–º—É ${payement2} –∑—ñ –∑–Ω–∏–∂–∫–æ—é ${discount * 100}%`
);

totalSpent += payement2;

console.log(`–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤—Å—ñ—Ö –ø–æ–∫—É–ø–æ–∫ –≤ –º–∞–≥–∞–∑–∏–Ω—ñ ${totalSpent}`);

// lesson 6
const numbers = [...[1, 2, 3], ...[4, 5, 6], ...[7, 8, 9]];
console.log(numbers);

// –ó–∞–¥–∞—á–∞ 1
const lastWeekTemps = [1, 2, 3];
const currentTemps = [4, 5, 6];
const nextWeekTemps = [7, 8, 9];

const allTemps = [...lastWeekTemps, ...currentTemps, ...nextWeekTemps];
console.log(allTemps);

// –ó–∞–¥–∞—á–∞ 2
const defaultSettings = {
  theme: 'light',
  showNotifications: true,
  hideSidebar: false,
};

const userSettings = {
  showNotifications: false,
  hideSidebar: true,
};

const finalSettings = {
  ...defaultSettings,
  ...userSettings,
};
console.log(finalSettings);

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—å–µ–∫—Ç–∞
const playlist = {
  name: '–ú–æ–π –ø–ª–µ–π–ª–∏—Å—Ç',
  rating: 4,
  tracks: ['—Ç—Ä–µ–∫-1', '—Ç—Ä–µ–∫-2'],
  stats: { aa: 1, b: 2, c: 3 },
};

const {
  name,
  rating,
  tracks,
  stats: { aa, b, c },
} = playlist;
console.log(name);
console.log(rating);
console.log(tracks);
console.log(aa);
console.log(b);
console.log(c);

const author = { kiwi: 4, poly: 2 };
const entries = Object.entries(author);

for (const [name, rating] of entries) {
  console.log(name, rating);
}

// –ü–∞—Ç—Ç–µ—Ä–Ω - –û–±—å–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
const fn = function (params) {
  return params;
};

// –ù–µ–∑—Ä–æ–∑—É–º—ñ–ª–æ —â–æ —Ü–µ —Ç–∞–∫–µ...
console.log(fn(10, 5, true, [], {}, 6));

// –æ–±—å–µ–∫—Ç –∑ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —Ç–æ–¥—ñ –≤—Å–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ
console.log(
  fn({ age: 10, friends: 5, isOnline: true, hobbies: [], games: {}, rating: 6 })
);

// –ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä—ñ–≤
const cart = {
  items: [],
  getItems() {
    return this.items;
  },
  add(product) {
    // console.table(this.items);
    for (const item of this.items) {
      if (item.name === product.name) {
        item.quantity += 1;
        return;
      }
    }

    const newProduct = { ...product, quantity: 1 };
    this.items.push(newProduct);
  },
  remove(productName) {
    for (let i = 0; i < this.items.length; i += 1) {
      const { name } = this.items[i];

      if (productName === name) {
        console.log('–ù–∞—à–ª–∏');
        console.log(i);
        this.items.splice(i, 1);
      }
    }
  },
  clean() {
    this.items = [];
  },
  countTotalPrice() {
    let total = 0;

    for (const item of this.items) {
      total += item.price * item.quantity;
    }
    return total;
  },
  increaseQuantity(productName) {},
  decreaseQuantity(productName) {},
};

console.log(cart.getItems());

cart.add({ name: 'üçé', price: 50 });
cart.add({ name: 'ü•ù', price: 60 });
cart.add({ name: 'üçã', price: 60 });
cart.add({ name: 'üçã', price: 60 });
cart.add({ name: 'üçì', price: 110 });
cart.add({ name: 'üçì', price: 110 });
cart.add({ name: 'üçì', price: 110 });

console.log(cart.getItems());
console.log(cart.countTotalPrice());
cart.remove('üçé');

cart.clean();
console.log(cart.getItems());
console.log(cart.countTotalPrice());
